# TOX configuration file. See (https://tox.readthedocs.io/)
#
# Setup:
# $ python3 -m venv venv
# $ source venv/bin/activate    # (Windows: venv\Scripts\activate)
# (venv) $ pip install -U pip setuptools
# (venv) $ pip install -e .[dev]
#
# Run tests in ./tests/:
# (venv) $ tox
#
# Run performance tests in ./tests/:
# (venv) $ tox -- -m perf
#
# Run clib dependent tests in ./tests/:
# (venv) $ tox -- -m clib
#
# Run tests with coverage in ./tests/:
# (venv) $ tox -ecov
#
# Check style (flake8) in ./src/ and ./tests/:
# (venv) $ tox -elint
#
# Generate demo_*.rst in ./docs/demos/ and documentation zip in ./dist/:
# [N.B. Requires pandoc: https://pandoc.org/installing.html]
# (venv) $ tox -edocs
#
# Build source and binary distributables in ./dist/:
# (venv) $ tox -ebuild
#
# Run Jupyter notebook in ./demos/:
# (venv) $ tox -edemos
#

[tox]
envlist = lint, py37, py38

[testenv]
deps =
    pytest
    pytest-cov
commands =
    pytest --basetemp="{envtmpdir}" --cov="{envsitepackagesdir}/qecsim" {posargs}

[testenv:lint]
skip_install = true
deps =
    flake8
    flake8-bugbear
commands =
    flake8 {posargs} src tests

# tox -edocs requires pandoc: https://pandoc.org/installing.html
[testenv:docs]
deps =
    jupyter
    sphinx
    sphinx_rtd_theme
    sphinx-autorun
commands =
    python -c "import shutil; shutil.move('docs/demos/', r'{envtmpdir}/demos_bak/')"
    jupyter nbconvert --to rst --output-dir ./docs/demos ./demos/demo_*.ipynb
    sphinx-build -W -bhtml -d"{envtmpdir}/doctrees" ./docs "{envtmpdir}/html/qecsim"
    python -c "import shutil; shutil.rmtree(r'{envtmpdir}/html/qecsim/_static/fonts/', ignore_errors=True)"
    python -c "import shutil, qecsim; shutil.make_archive(f'dist/qecsim-\{qecsim.__version__\}-docs', 'zip', r'{envtmpdir}/html', 'qecsim')"

[testenv:build]
skip_install = true
deps =
    check-manifest
    docutils
    wheel
commands =
    check-manifest
    python setup.py check -mrs
    python setup.py build --build-base="{envtmpdir}/build" sdist bdist_wheel

[testenv:demos]
deps =
    jupyter
    matplotlib
commands =
    jupyter notebook --notebook-dir=demos


# tool configurations
[pytest]
testpaths = tests
# skip perf and clib tests by default
addopts = -m "not perf and not clib"
markers =
    perf: marks tests of performance (select with '-m perf')
    clib: marks tests depending on clibs (select with '-m clib')

[flake8]
# E = pycodestyle errors: https://www.flake8rules.com/
# F = flake8 pyflakes
# W = pycodestyle warnings
# C = mccabe complexity
# B = bugbear warnings: https://pypi.org/project/flake8-bugbear/
# B9 = bugbear opinions
select = E, F, W, C, B, B9
ignore =
    # line length, handled by pep8 E501
    B950
    # bare except, handled by bugbear B001
    E722
    # line break before binary operator, invalid
    W503
# Enforced by E501
max-line-length = 120

[check-manifest]
ignore =
    tox.ini
    todo.txt
    clib/**
    demos/**
    docs/**
    tests/**

[gh-actions]
python =
    3.7: py37, lint
